def JENKINS_SLAVE_IMAGE = "dotnet-31-jenkins-agent-rhel7"
pipeline {
  agent {
    kubernetes {
      label "dotnet-31-jenkins-agent-rhel7"
      cloud "openshift"
	  serviceAccount "jenkins"
	  instanceCap "100"
      containerTemplate {
        name "jnlp"
        image "registry.redhat.io/dotnet/dotnet-31-jenkins-agent-rhel7:latest"
		workingDir "/tmp"
		alwaysPullImage "true"
        resourceRequestMemory "600Mi"
        resourceLimitMemory "2Gi"
        resourceRequestCpu "1"
        resourceLimitCpu "2"
		ttyEnabled "false"
		privileged "false"
      }
    }
  }
  options {
    // set a timeout of 30 minutes for this pipeline
    timeout(time: 30, unit: 'MINUTES')
  }
  environment {
    version = ""
    imageName = "backend"
    devTag = "0.0-0"
    nexusUser = ""
    nexusPassword =""
   
  }
  
  stages {
    // Checkout Source Code.
    stage('Checkout Source') {
      steps {

        checkout scm
        dir('app') {
          script {
            def props = readProperties  file:'build.properties'
            version = props['version']
			devTag = "${version}-" + currentBuild.number
            echo "Image Name: ${imageName}"
            echo "version: ${version}"
            echo "devTag: ${devTag}"
            echo "Backend URL: ${env.BACKEND_URL}"
            echo "CICD Project: ${env.CICD_PROJECT}"
            echo "Development Project: ${env.DEV_PROJECT}"
          }
        }
      }
    }
	stage('restore') {
	  steps {
	    dir('app') {
		  sh "dotnet --version"
	    }
	  }
	}
  }
}
