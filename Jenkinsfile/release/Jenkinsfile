import java.text.SimpleDateFormat
def JENKINS_SLAVE_IMAGE = "dotnet-31-jenkins-agent-rhel7"
def selectTag
def releaseTag
def tag
def UAT_PROJECT = "uat"
def CICD_PROJECT = "ci-cd"

node {
  def dateFormat = new SimpleDateFormat("yyyyMMdd")
  def date = new Date()
  def releaseDate = (dateFormat.format(date))
  tag = releaseDate + "-" + env.BUILD_NUMBER
  
}
pipeline {
  agent none
  options {
    timeout(time: 30, unit: 'MINUTES')
  }
  environment {
    imageName="backend"
  }
  stages {  
    
	stage('Checkout Source') {
	  steps {
		git(
		  url: "https://github.com/chatapazar/dotnetcicd.git"
        )
	  }
	}
	
    stage('Choose UAT Version') {
      steps {
        script {
          openshift.withCluster() {
            namespace = openshift.project()
            def tags = openshift.selector("istag")
              .objects()
              .collect {
                it.metadata.name
              }
              .findAll {
                it ==~ /^backend:([0-9]+)\.([0-9]+)\.([0-9]+)\-([0-9]+)$/
                //it.startsWith 'backend:([0-9]+)\.([0-9]+)\.([0-9]+)\-([0-9]+)'
              }
              .collect {
                it.replaceAll(/backend:(.*)/, "\$1")
              }
              .sort()
            timeout(5) {
              selectTag = input(
                ok: "Deploy UAT",
                message: "Enter release version to promote to UAT",
                parameters: [
                  choice(
                    choices: tags.join('\n'),
                    description: '',
                    name: 'Release Version'
                  )
                ]
              )
            }
          }
          println "selectTag = ${selectTag}"
          version = selectTag.split('-')[0]
          println "version = ${version}"
          println "tag = ${tag}"
          releaseTag = version + "-" + tag
          println "releaseTag = ${releaseTag}"
        }
      }
    }
	
	
  }
}
